{"swagger":"2.0","info":{"version":"2.0","title":"Episerver Profile Store API 2.0","description":"Episerver Profile Store Rest API.","termsOfService":"","contact":{"name":"Episerver","url":"http://world.episerver.com","email":"developersupport@episerver.com"},"license":{"name":"End User License Agreement","url":"http://www.episerver.com/eula/"}},"paths":{"/api/v2.0/FilterDefinitions":{"get":{"tags":["FilterDefinitions"],"summary":"Get all filter definitions.","operationId":"GetAsync","consumes":[],"produces":[],"parameters":[{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}},"post":{"tags":["FilterDefinitions"],"summary":"Create a filter definition.","operationId":"PostAsync","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"request","in":"body","description":"The filter definition request object.","required":false,"schema":{"$ref":"#/definitions/FilterDefinitionPostRequest"}},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"},"409":{"description":"Conflict"}}}},"/api/v2.0/FilterDefinitions/{id}":{"get":{"tags":["FilterDefinitions"],"summary":"Get a filter definition by id.","operationId":"GetAsync","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"The filter definition id.","required":true,"type":"string"},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}},"put":{"tags":["FilterDefinitions"],"summary":"Update a filter definition.","operationId":"PutAsync","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"id","in":"path","description":"The filter definition id.","required":true,"type":"string"},{"name":"request","in":"body","description":"The filter definition update request.","required":false,"schema":{"$ref":"#/definitions/FilterDefinitionPutRequest"}},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}},"delete":{"tags":["FilterDefinitions"],"summary":"Delete a filter definition.","operationId":"DeleteAsync","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"The filter definition id.","required":true,"type":"string"},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"},"409":{"description":"Conflict"}}}},"/api/v2.0/FilterDefinitions/{id}/preview":{"post":{"tags":["FilterDefinitions"],"operationId":"PreviewAsync","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"request","in":"body","required":false,"schema":{"$ref":"#/definitions/FilterDefinitionPreviewRequest"}},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}}},"/api/v2.0/Profiles/{scope}/{id}":{"get":{"tags":["Profiles"],"summary":"Gets profile by id.","operationId":"GetByIdAndScopeAsync","consumes":[],"produces":[],"parameters":[{"name":"scope","in":"path","description":"The profile scope.","required":true,"type":"string"},{"name":"id","in":"path","description":"The profile id.","required":true,"type":"string"},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}},"delete":{"tags":["Profiles"],"summary":"Deletes profiles and associated track events.","operationId":"DeleteAsync","consumes":[],"produces":[],"parameters":[{"name":"scope","in":"path","description":"The profile scope.","required":true,"type":"string"},{"name":"id","in":"path","description":"The profile id.","required":true,"type":"string"},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}}},"/api/v2.0/Profiles":{"get":{"tags":["Profiles"],"summary":"Gets tracked events based on Lucene syntax query.","operationId":"GetAsync","consumes":[],"produces":[],"parameters":[{"name":"$filter","in":"query","description":"The filter in oData syntax.","required":false,"type":"string"},{"name":"$orderBy","in":"query","description":"The order result will be returned in. syntax is\r\n            [field] [ASC/DESC].","required":false,"type":"string"},{"name":"$skip","in":"query","description":"The number of hits to skip.","required":false,"type":"integer","format":"int32","default":0,"maximum":10000.0,"minimum":0.0},{"name":"$top","in":"query","description":"The number of hits to return.","required":false,"type":"integer","format":"int32","default":100,"maximum":10000.0,"minimum":0.0},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}},"post":{"tags":["Profiles"],"summary":"Creates a new profile.","operationId":"PostAsync","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"profileRequest","in":"body","description":"The profile object to be saved.","required":false,"schema":{"$ref":"#/definitions/ProfileRequest"}},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}}},"/api/v2.0/Profiles/{id}":{"put":{"tags":["Profiles"],"summary":"Replaces an existing profile, or creates a new profile if no profile with the supplied id exists.","operationId":"PutAsync","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"id","in":"path","description":"The profile id.","required":true,"type":"string"},{"name":"profileRequest","in":"body","description":"The profile object to be saved.","required":false,"schema":{"$ref":"#/definitions/ProfileRequest"}},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}}},"/api/v2.0/Scopes/{id}":{"get":{"tags":["Scopes"],"summary":"Gets scope by scope id.","operationId":"GetAsync","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"The scope id.","required":true,"type":"string"},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}},"put":{"tags":["Scopes"],"summary":"Replaces an existing scope, or creates a new scope if no scope with the supplied id exists.","operationId":"PutAsync","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"id","in":"path","description":"The scope id. Scope id is set by the end user and this value should be used by Scope properties in Profile and TrackEvent","required":true,"type":"string"},{"name":"scopeRequest","in":"body","description":"The scope object to be saved.","required":false,"schema":{"$ref":"#/definitions/ScopeRequest"}},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}}},"/api/v2.0/Scopes":{"get":{"tags":["Scopes"],"summary":"Gets all scopes.","operationId":"GetAsync","consumes":[],"produces":[],"parameters":[{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}}},"/api/v2.0/Segments":{"get":{"tags":["Segments"],"summary":"Gets segments version 2 based on Lucene syntax query.","operationId":"GetAsyncV2","consumes":[],"produces":[],"parameters":[{"name":"$filter","in":"query","description":"The filter in oData syntax.","required":false,"type":"string"},{"name":"$orderBy","in":"query","description":"The order result will be returned in. syntax is\r\n            [field] [ASC/DESC].","required":false,"type":"string"},{"name":"$skip","in":"query","description":"The number of hits to skip.","required":false,"type":"integer","format":"int32","default":0,"maximum":10000.0,"minimum":0.0},{"name":"$top","in":"query","description":"The number of hits to return.","required":false,"type":"integer","format":"int32","default":100,"maximum":10000.0,"minimum":0.0},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"202":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}},"post":{"tags":["Segments"],"summary":"Creates a new segment.","operationId":"PostAsyncV2","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"segmentRequest","in":"body","description":"The segment request used to create segment.","required":false,"schema":{"$ref":"#/definitions/SegmentRequest"}},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"202":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}}},"/api/v2.0/Segments/{id}":{"get":{"tags":["Segments"],"summary":"Gets segment information.","operationId":"GetAsyncV2","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","description":"The segment id.","required":true,"type":"string"},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"202":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}},"put":{"tags":["Segments"],"summary":"Replaces an existing segment, or creates a new segment if no segment with the supplied id exists.","operationId":"PutAsyncV2","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"id","in":"path","description":"The segment id.","required":true,"type":"string"},{"name":"segmentRequest","in":"body","description":"The segment request used to create segment.","required":false,"schema":{"$ref":"#/definitions/SegmentRequest"}},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"202":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}}},"/api/v2.0/Segments/execute":{"post":{"tags":["Segments"],"summary":"Preview a result of segment with FilterDefinition.","operationId":"ExecuteAsync","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"request","in":"body","description":"The preview request.","required":false,"schema":{"$ref":"#/definitions/ExecuteSegmentRequest"}},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"202":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}}},"/api/v2.0/Segments/{id}/MatchByProfileId":{"post":{"tags":["Segments"],"summary":"Verifies list profile id and return profiles match this segment.","operationId":"MatchByProfileIdAsync","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"id","in":"path","description":"The segment id.","required":true,"type":"string"},{"name":"profileIds","in":"body","description":"The list profile id used to verify with segment id.","required":false,"schema":{"uniqueItems":false,"type":"array","items":{"type":"string"}}},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"202":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}}},"/api/v2.0/Segments/{id}/MatchByEmail":{"post":{"tags":["Segments"],"summary":"Verifies list profile email and return profiles match this segment.","operationId":"MatchByEmailAsync","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"id","in":"path","description":"The segment id.","required":true,"type":"string"},{"name":"emails","in":"body","description":"The list email used to verify with segment id.","required":false,"schema":{"uniqueItems":false,"type":"array","items":{"type":"string"}}},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"201":{"description":"Success"},"202":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}}},"/api/v2.0/TrackEvents/{scope}/{id}":{"delete":{"tags":["TrackEvents"],"summary":"Delete track event based on scope and Id.","operationId":"DeleteAsync","consumes":[],"produces":[],"parameters":[{"name":"scope","in":"path","description":"The profile scope.","required":true,"type":"string"},{"name":"id","in":"path","description":"The profile id.","required":true,"type":"string"},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}}},"/api/v2.0/TrackEvents":{"get":{"tags":["TrackEvents"],"summary":"Gets tracked events based on Lucene syntax query.","operationId":"GetAsync","consumes":[],"produces":[],"parameters":[{"name":"$filter","in":"query","description":"The filter in oData syntax.","required":false,"type":"string"},{"name":"$orderBy","in":"query","description":"The order result will be returned in. syntax is\r\n            [field] [ASC/DESC].","required":false,"type":"string"},{"name":"$skip","in":"query","description":"The number of hits to skip.","required":false,"type":"integer","format":"int32","default":0,"maximum":10000.0,"minimum":0.0},{"name":"$top","in":"query","description":"The number of hits to return.","required":false,"type":"integer","format":"int32","default":100,"maximum":10000.0,"minimum":0.0},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"}}},"post":{"tags":["TrackEvents"],"summary":"Sends an ADX query to query track event data.","operationId":"PostAsync","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"trackEventQueryRequest","in":"body","description":"The track event query request.","required":false,"schema":{"$ref":"#/definitions/TrackEventQueryRequest"}},{"name":"Authorization","in":"header","description":"Authorization header with a value in the following format: epi-single KEY.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"500":{"description":"Server Error"}}}}},"definitions":{"FilterDefinitionPostRequest":{"description":"The filter definition post request.","required":["Name","Query","Type"],"type":"object","properties":{"Name":{"description":"The name.","type":"string"},"Description":{"description":"The filter definition description.","type":"string"},"Query":{"description":"The KQL to query events.","type":"string"},"Parameters":{"description":"The list of parameters to the Query.","type":"object","additionalProperties":{"type":"string"}},"Category":{"description":"The category.","type":"string"},"Type":{"description":"The filter definition type.","enum":["Events","Profiles"],"type":"string"}}},"FilterDefinitionPutRequest":{"description":"The filter definition put request.","required":["Query","Type"],"type":"object","properties":{"Description":{"description":"The filter definition description.","type":"string"},"Query":{"description":"The KQL to query events.","type":"string"},"Parameters":{"description":"The list of parameters to the Query.","type":"object","additionalProperties":{"type":"string"}},"Category":{"description":"The category.","type":"string"},"Type":{"description":"The filter definition type.","enum":["Events","Profiles"],"type":"string"}}},"FilterDefinitionPreviewRequest":{"type":"object","properties":{"Take":{"format":"int32","maximum":1000.0,"minimum":0.0,"type":"integer"},"Parameters":{"type":"object","additionalProperties":{"type":"object"}}}},"ProfileRequest":{"description":"Holder object for requests to create or update profiles.","type":"object","properties":{"Name":{"description":"Name of the profile.","type":"string"},"ProfileManager":{"description":"ProfileManager of the profile.","type":"string"},"FirstSeen":{"format":"date-time","description":"When the first track event was generated for this profile.","type":"string"},"LastSeen":{"format":"date-time","description":"When the last track event was generated from this profile.","type":"string"},"Score":{"format":"int32","description":"The profile score.","type":"integer"},"Visits":{"format":"int32","description":"Number of visits made by this profile.","maximum":2147483647.0,"minimum":0.0,"type":"integer"},"Info":{"description":"Extra information regarding the profile.","type":"object","properties":{"Picture":{"type":"string"},"Website":{"type":"string"},"StreetAddress":{"type":"string"},"Phone":{"type":"string"},"Mobile":{"type":"string"},"City":{"type":"string"},"State":{"type":"string"},"ZipCode":{"type":"string"},"JobTitle":{"type":"string"},"Company":{"type":"string"},"Country":{"type":"string"},"InferredCountry":{"type":"string"},"Email":{"type":"string"}}},"ContactInformation":{"description":"List of ways to get in contact.","uniqueItems":false,"type":"array","items":{"type":"string"}},"Scope":{"description":"The profile scope.","type":"string"},"Payload":{"description":"Other custom information.","type":"object"},"DeviceIds":{"description":"List of attached device(s).","uniqueItems":false,"type":"array","items":{"type":"string"}},"VisitorGroups":{"description":"Gets or sets the list of visitor group that user belong to.","uniqueItems":false,"type":"array","items":{"type":"string"}}}},"ScopeRequest":{"description":"Holder object for requests to create or update scopes.","type":"object","properties":{"Description":{"description":"Description of the scope.","type":"string"}}},"SegmentRequest":{"description":"Represent a request of a EPiServer.Profiles.Models.Segment in Profile API.","required":["Scope","Name"],"type":"object","properties":{"Scope":{"description":"Gets or sets segment scope.","type":"string"},"SegmentManager":{"description":"Gets or sets the manager.","type":"string"},"ProfileQuery":{"description":"Gets or sets the profile query in OData query format.","type":"string"},"Filters":{"$ref":"#/definitions/SegmentFilterCollectionRequest","description":"Gets or sets the segment Filter collections."},"AvailableForPersonalization":{"description":"Gets or sets available for personalization.","type":"boolean"},"Archived":{"description":"Gets or sets archived.","type":"boolean"},"FavoredBy":{"description":"Gets or sets list of favored by.","uniqueItems":false,"type":"array","items":{"type":"string"}},"Name":{"type":"string"},"Description":{"type":"string"}}},"SegmentFilterCollectionRequest":{"type":"object","properties":{"Items":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/SegmentFilterRequest"}}}},"SegmentFilterRequest":{"type":"object","properties":{"Type":{"enum":["Events","Profiles"],"type":"string"},"Query":{"type":"string"},"Parameters":{"type":"object","additionalProperties":{"type":"object"}}}},"ExecuteSegmentRequest":{"description":"Represent an execute request of a EPiServer.Profiles.Models.Segment in Profile API.","required":["Scope"],"type":"object","properties":{"Scope":{"description":"Gets or sets segment scope.","type":"string"},"ProfileQuery":{"description":"Gets or sets the profile query in OData query format.","type":"string"},"Filters":{"$ref":"#/definitions/SegmentFilterCollectionRequest","description":"Gets or sets the segment Filter collections."},"Take":{"format":"int32","description":"Gets or sets the number of records return per page.","maximum":1000.0,"minimum":0.0,"type":"integer"},"Skip":{"format":"int32","description":"Gets or sets the number of records to skip.","maximum":2147483647.0,"minimum":0.0,"type":"integer"},"SortOptions":{"description":"Gets or sets the sort option.","uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/SortOptionRequest"}}}},"SortOptionRequest":{"description":"Represent the order of result to be returned.","required":["SortField"],"type":"object","properties":{"SortField":{"description":"Gets or sets the sort property.","type":"string"},"SortOrder":{"description":"Gets or sets the order of sort [asc/desc].","enum":["asc","desc"],"type":"string"}}},"TrackEventQueryRequest":{"description":"Holder object for requests to query on track event data.","required":["Query"],"type":"object","properties":{"Query":{"description":"The ADX track event data query.","type":"string"},"Scope":{"description":"The scope of query.","type":"string"}}}}}